from random import randint #импортируем библиотеку рандом

list_bubble = [] #создаем пустой список для сортировки пузырьком
k = 0 #переменная для подсчета количесва иттерация сортировки пузырьком
t = 0 #переменная для подсчета количесва иттерация сортировки выборкой

for i in range (0, 100): #цикл для добавления элементов в список
    a = randint(1, 1_000_000) #выбираем число
    list_bubble.append(a) #добавляем его в список

list_choise = list_bubble.copy() #копируем этот список в новый для сортировки выборкой

print('Иттерации сортировки пузырьком:')
stop_flag = True #стоп-флаг, чтобы понять, когда нужно выйти из цикла
while stop_flag is True:
    stop_flag = False #сразу переставляем его в False
    for i in range(0, len(list_bubble)-1): #проходим попарно по всему списку
        if list_bubble[i] < list_bubble[i+1]:
            change = list_bubble[i] #создаем третью переменную, чтобы мы могли переставить значения
            list_bubble[i] = list_bubble[i+1]
            list_bubble[i+1] = change
            stop_flag = True #включаем флаг, чтобы он смог еще раз зайти в цикл

    k += 1 #
    print(f'{k}. {list_bubble}')

print('Иттерации сортировки выборкой:')
sort = [] #создаем пустой список, куда мы будем добавлять значения
while len(list_choise)>0: #цикл будет работать, пока в изначальном списке будут элементы
    max = list_choise[0] #для начала берем самый первый элемент
    for i in range(0, len(list_choise)): #проходим им по всему списку
        if max < list_choise[i]: #и если мы находим элемент больше, то заменяем его
            max = list_choise[i]

    sort.append(max) #после прохождения добавляем его в отсортированный список
    list_choise.remove(max) #и удаляем из первого списка

    t += 1
    print(f'{t}. {sort}')
#вы берем k-1, т.к. при сортировке пузырьком он последний раз заходит в цикл и ничего в нем не меняет
print(f'Для сортировки списка пузырьком нам понадобилось {k-1} иттераций\nДля сортирочки списка выборкой нам понадобилось {t} иттераций')