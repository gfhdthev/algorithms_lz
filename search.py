from random import randint #импортируем библиотеку

list = [] #создаем пустой список для сортировки пузырьком
k = 0 #переменная для подсчета иттерация линейного поиска
t = 0 #переменная для подсчета иттерация линейного поиска

for i in range (0, 100): #цикл для добавления элементов в список
    a = randint(1, 1_000_000) #выбираем число
    list.append(a) #добавляем его в список

#сортируем наш список пузырьком
stop_flag = True 
while stop_flag is True:
    stop_flag = False
    for i in range(0, len(list)-1):
        if list[i] > list[i+1]:
            change = list[i]
            list[i] = list[i+1]
            list[i+1] = change
            stop_flag = True

#проверяем список на повторяющиеся элементы (условие в задаче)
stop_flag = True
while stop_flag is True: #так же  используем стоп-флаг, чтобы понять, что повторов нету
        stop_flag = False #переставляем его в Фолз
        for i in range(0, len(list)-1): #перебираем все элементы
            if list[i] == list[i+1]: #т.к. список отсортирован, то мложем проверять только n-нный и n+1-вый элементы
                list[i] -= 1 #если такой элемент найден, то отнимаем у него 1, чтобы он больше не повторялся
                stop_flag = True #переставляем флажок в Тру, чтобы он прошел цикл еще раз
            #если такого элемента найдено не бцдет, то цикл while пройдет только 1 раз

print(list) #вывождим отсортированный список без повторов для удобства выбора элемента для поиска
a = int(input('Введите элемент, который хотите найти: ')) #просим пользователя ввести элемент для поиска

#Линейный поиск
find = False # Создаем переменную, чтобы понять, найден ли элемент
print('Линейный поиск:')
for i in range(0, len(list)): #Перебираем все элементы
    k += 1 #Добавляем иттерации
    if a == list[i]: #если введенное числа равно какому-то элементу из списка
        print(f'Элемент {a} находится в списке на месте c индексом {i}')
        print(f'Для линейного поиска понадобилось {k} иттераций')
        find = True #переставляем переменную в позицию Тру, чтобы показать, что элемент найден
        break #останавливаем цикл
if find == False: #если элемент найден не будет, то мы выведем сообщение ниже
    print(f'Элемент {a} не найден в списке')

print('Бинарный поиск:')
first = 0 #берем самый первый индекс
last = len(list)-1 #и самый последний
index = -1
while (first <= last) and (index == -1): #цикл будет выполняться пока первый индекст будет меньше или равен последнему или мы не найдем нужный элемент
    mid = (first+last)//2 #находим центральный элемент
    if list[mid] == a: #если введенное число равно центральному элементу
        index = mid #то мы присваиваем переменной значение индекса этого элемента
    else: 
        if a<list[mid]: #если введенное число меньше центрального элемента
            last = mid - 1 #мы обрезаем значения справа наполовину
        else: #если введенное число больше центрального элемента
            first = mid + 1  #мы обрезаем значенния слева наполовину

    t += 1 #добавляем одну иттерация
#цикл будет работать, пока введенное числе не будет равно какому-либо новую централному элементу

if index == -1: #если индекс будет равен -1, это будет означать, что мы не нашли элемент
    print(f'Элемент {a} не найден в списке')

else: 
    print(f'Элемент {a} находится в списке на месте c индексом {index}')
    print(f'Для бинарного поиска понадобилось {t} иттераций')